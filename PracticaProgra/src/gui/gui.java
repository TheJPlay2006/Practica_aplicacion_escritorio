/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

/**
 *
 * @author TheJPlay2006
 */

import Dominio.Tarea;
import Servicio.TareaServicio;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.List;
import javax.swing.table.DefaultTableModel;

public class gui extends javax.swing.JFrame {
 private TareaServicio tareaServicio;
    private DefaultTableModel modeloTabla;
    /**
     * Creates new form gui
     */
    
    
      public gui(TareaServicio tareaServicio) {
        this.tareaServicio = tareaServicio;
        initComponents();
        inicializarTabla();
        cargarDatos();
       
    }
      
private void inicializarTabla() {
        modeloTabla = (DefaultTableModel) jTable1.getModel();
    }

private void cargarDatos() {
        try {
            modeloTabla.setRowCount(0); // Limpiar tabla
            List<Tarea> tareas = tareaServicio.obtenerTareas();
            for (Tarea tarea : tareas) {
                modeloTabla.addRow(new Object[]{
                    tarea.getId(),
                    tarea.getTitulo(),
                    tarea.getPrioridad(),
                    tarea.isEstado() ? "Hecho" : "Pendiente",
                    tarea.isEspecial() ? "★" : "",
                    tarea.getFecha()
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar datos: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnAlternarEstado = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnEliminarTarea = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Titulo", "Prioridad", "Estado", "Especial", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnAlternarEstado.setText("Alternar estado");
        btnAlternarEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlternarEstadoActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnEliminarTarea.setText("Eliminar tarea");
        btnEliminarTarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTareaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(btnAgregar)
                .addGap(48, 48, 48)
                .addComponent(btnEliminarTarea)
                .addGap(57, 57, 57)
                .addComponent(btnAlternarEstado)
                .addGap(88, 88, 88)
                .addComponent(btnSalir)
                .addContainerGap(168, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnAlternarEstado)
                    .addComponent(btnSalir)
                    .addComponent(btnEliminarTarea))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
         String titulo = JOptionPane.showInputDialog(this, "Ingrese el título:");
        if (titulo == null || titulo.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El título no puede estar vacío.");
            return;
        }

        int prioridad = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese la prioridad (1-3):"));
        boolean especial = JOptionPane.showConfirmDialog(this, "¿Es especial?") == JOptionPane.YES_OPTION;
        LocalDate fecha = LocalDate.now();

        Tarea tarea = new Tarea(titulo, prioridad, especial, fecha);
        try {
            tareaServicio.agregarTarea(tarea);
            cargarDatos(); // Actualizar la tabla después de agregar
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error al agregar tarea: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
 System.exit(0);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnAlternarEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlternarEstadoActionPerformed
       int filaSeleccionada = jTable1.getSelectedRow();
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Selecciona una tarea para alternar su estado.");
        return;
    }

    int idTarea = (int) modeloTabla.getValueAt(filaSeleccionada, 0);
    try {
        tareaServicio.alternarEstadoTarea(idTarea);
        cargarDatos(); // Actualizar la tabla
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al alternar el estado: " + ex.getMessage());
    }
    }//GEN-LAST:event_btnAlternarEstadoActionPerformed

    private void btnEliminarTareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTareaActionPerformed
        int filaSeleccionada = jTable1.getSelectedRow();
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Selecciona una tarea para eliminar.");
        return;
    }

    int idTarea = (int) modeloTabla.getValueAt(filaSeleccionada, 0);
    try {
        tareaServicio.eliminarTarea(idTarea);
        cargarDatos(); // Actualizar la tabla
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al eliminar la tarea: " + ex.getMessage());
    }
    }//GEN-LAST:event_btnEliminarTareaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAlternarEstado;
    private javax.swing.JButton btnEliminarTarea;
    private javax.swing.JButton btnSalir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
